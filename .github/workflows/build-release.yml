name: build-release
on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    strategy:
      matrix:
        java: [ 21 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    outputs:
      artifact-digest: ${{ steps.upload.outputs.artifact-digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build

      - name: Upload build artifacts
        id: upload
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  attest:
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts

      - name: Attest build artifacts provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: artifact.zip
          subject-digest: sha256:${{ needs.build.outputs.artifact-digest }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

      - name: Attest build artifacts provenance
        id: attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: build/libs/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body: 'Attestation: ${{ steps.attest.outputs.attestation-url }}'
          generate_release_notes: true
          files: build/libs/*
